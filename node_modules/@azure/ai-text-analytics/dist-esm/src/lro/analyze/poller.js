// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
import { delay } from "@azure/core-http";
import { AnalysisPoller } from "../poller";
import { BeginAnalyzePollerOperation } from "./operation";
/**
 * Class that represents a poller that waits for the analyze results.
 */
export class BeginAnalyzePoller extends AnalysisPoller {
    // eslint-disable-next-line @azure/azure-sdk/ts-use-interface-parameters
    constructor(pollerOptions) {
        const { client, documents, analysisOptions, tasks, updateIntervalInMs = 5000, resumeFrom } = pollerOptions;
        let state;
        if (resumeFrom) {
            state = JSON.parse(resumeFrom).state;
        }
        const { requestOptions, tracingOptions } = analysisOptions || {};
        const operation = new BeginAnalyzePollerOperation(state || {}, client, documents, tasks, {
            analyze: { requestOptions, tracingOptions },
            polling: {
                updateIntervalInMs,
                resumeFrom
            }
        }, analysisOptions);
        super(operation);
        this.updateIntervalInMs = updateIntervalInMs;
    }
    delay() {
        return delay(this.updateIntervalInMs);
    }
}
//# sourceMappingURL=poller.js.map