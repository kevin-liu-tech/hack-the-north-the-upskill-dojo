// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
import { delay } from "@azure/core-http";
import { AnalysisPoller } from "../poller";
import { BeginAnalyzeHealthcarePollerOperation } from "./operation";
/**
 * Class that represents a poller that waits for the healthcare results.
 */
export class BeginAnalyzeHealthcarePoller extends AnalysisPoller {
    // eslint-disable-next-line @azure/azure-sdk/ts-use-interface-parameters
    constructor(pollerOptions) {
        const { client, documents, analysisOptions, updateIntervalInMs = 5000, resumeFrom } = pollerOptions;
        let state;
        if (resumeFrom) {
            state = JSON.parse(resumeFrom).state;
        }
        const { includeStatistics, requestOptions, tracingOptions } = analysisOptions || {};
        const operation = new BeginAnalyzeHealthcarePollerOperation(state || {}, client, documents, {
            health: analysisOptions,
            polling: {
                updateIntervalInMs,
                resumeFrom
            }
        }, 
        // take out modelVersion from the options that will be sent to the status
        // API because it is not applicable.
        { includeStatistics, requestOptions, tracingOptions });
        super(operation);
        this.updateIntervalInMs = updateIntervalInMs;
    }
    delay() {
        return delay(this.updateIntervalInMs);
    }
}
//# sourceMappingURL=poller.js.map