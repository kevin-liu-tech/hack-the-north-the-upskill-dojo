{"version":3,"file":"generatedClient.js","sourceRoot":"","sources":["../../../src/generated/generatedClient.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Parameters from \"./models/parameters\";\nimport * as Mappers from \"./models/mappers\";\nimport { GeneratedClientContext } from \"./generatedClientContext\";\nimport {\n  GeneratedClientOptionalParams,\n  GeneratedClientAnalyzeOptionalParams,\n  GeneratedClientAnalyzeResponse,\n  GeneratedClientAnalyzeStatusOptionalParams,\n  GeneratedClientAnalyzeStatusResponse,\n  GeneratedClientHealthStatusOptionalParams,\n  GeneratedClientHealthStatusResponse,\n  GeneratedClientCancelHealthJobResponse,\n  MultiLanguageBatchInput,\n  GeneratedClientHealthOptionalParams,\n  GeneratedClientHealthResponse,\n  GeneratedClientEntitiesRecognitionGeneralOptionalParams,\n  GeneratedClientEntitiesRecognitionGeneralResponse,\n  GeneratedClientEntitiesRecognitionPiiOptionalParams,\n  GeneratedClientEntitiesRecognitionPiiResponse,\n  GeneratedClientEntitiesLinkingOptionalParams,\n  GeneratedClientEntitiesLinkingResponse,\n  GeneratedClientKeyPhrasesOptionalParams,\n  GeneratedClientKeyPhrasesResponse,\n  LanguageBatchInput,\n  GeneratedClientLanguagesOptionalParams,\n  GeneratedClientLanguagesResponse,\n  GeneratedClientSentimentOptionalParams,\n  GeneratedClientSentimentResponse\n} from \"./models\";\n\nexport class GeneratedClient extends GeneratedClientContext {\n  /**\n   * Initializes a new instance of the GeneratedClient class.\n   * @param endpoint Supported Cognitive Services endpoints (protocol and hostname, for example:\n   *                 https://westus.api.cognitive.microsoft.com).\n   * @param options The parameter options\n   */\n  constructor(endpoint: string, options?: GeneratedClientOptionalParams) {\n    super(endpoint, options);\n  }\n\n  /**\n   * Submit a collection of text documents for analysis. Specify one or more unique tasks to be executed.\n   * @param options The options parameters.\n   */\n  analyze(\n    options?: GeneratedClientAnalyzeOptionalParams\n  ): Promise<GeneratedClientAnalyzeResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.sendOperationRequest(\n      { options: operationOptions },\n      analyzeOperationSpec\n    ) as Promise<GeneratedClientAnalyzeResponse>;\n  }\n\n  /**\n   * Get the status of an analysis job.  A job may consist of one or more tasks.  Once all tasks are\n   * completed, the job will transition to the completed state and results will be available for each\n   * task.\n   * @param jobId Job ID for Analyze\n   * @param options The options parameters.\n   */\n  analyzeStatus(\n    jobId: string,\n    options?: GeneratedClientAnalyzeStatusOptionalParams\n  ): Promise<GeneratedClientAnalyzeStatusResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.sendOperationRequest(\n      { jobId, options: operationOptions },\n      analyzeStatusOperationSpec\n    ) as Promise<GeneratedClientAnalyzeStatusResponse>;\n  }\n\n  /**\n   * Get details of the healthcare prediction job specified by the jobId.\n   * @param jobId Job ID\n   * @param options The options parameters.\n   */\n  healthStatus(\n    jobId: string,\n    options?: GeneratedClientHealthStatusOptionalParams\n  ): Promise<GeneratedClientHealthStatusResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.sendOperationRequest(\n      { jobId, options: operationOptions },\n      healthStatusOperationSpec\n    ) as Promise<GeneratedClientHealthStatusResponse>;\n  }\n\n  /**\n   * Cancel healthcare prediction job.\n   * @param jobId Job ID\n   * @param options The options parameters.\n   */\n  cancelHealthJob(\n    jobId: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<GeneratedClientCancelHealthJobResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.sendOperationRequest(\n      { jobId, options: operationOptions },\n      cancelHealthJobOperationSpec\n    ) as Promise<GeneratedClientCancelHealthJobResponse>;\n  }\n\n  /**\n   * Start a healthcare analysis job to recognize healthcare related entities (drugs, conditions,\n   * symptoms, etc) and their relations.\n   * @param input Collection of documents to analyze.\n   * @param options The options parameters.\n   */\n  health(\n    input: MultiLanguageBatchInput,\n    options?: GeneratedClientHealthOptionalParams\n  ): Promise<GeneratedClientHealthResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.sendOperationRequest(\n      { input, options: operationOptions },\n      healthOperationSpec\n    ) as Promise<GeneratedClientHealthResponse>;\n  }\n\n  /**\n   * The API returns a list of general named entities in a given document. For the list of supported\n   * entity types, check <a href=\"https://aka.ms/taner\">Supported Entity Types in Text Analytics API</a>.\n   * See the <a href=\"https://aka.ms/talangs\">Supported languages in Text Analytics API</a> for the list\n   * of enabled languages.\n   * @param input Collection of documents to analyze.\n   * @param options The options parameters.\n   */\n  entitiesRecognitionGeneral(\n    input: MultiLanguageBatchInput,\n    options?: GeneratedClientEntitiesRecognitionGeneralOptionalParams\n  ): Promise<GeneratedClientEntitiesRecognitionGeneralResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.sendOperationRequest(\n      { input, options: operationOptions },\n      entitiesRecognitionGeneralOperationSpec\n    ) as Promise<GeneratedClientEntitiesRecognitionGeneralResponse>;\n  }\n\n  /**\n   * The API returns a list of entities with personal information (\\\"SSN\\\", \\\"Bank Account\\\" etc) in the\n   * document. For the list of supported entity types, check <a href=\"https://aka.ms/tanerpii\">Supported\n   * Entity Types in Text Analytics API</a>. See the <a href=\"https://aka.ms/talangs\">Supported languages\n   * in Text Analytics API</a> for the list of enabled languages.\n   *\n   * @param input Collection of documents to analyze.\n   * @param options The options parameters.\n   */\n  entitiesRecognitionPii(\n    input: MultiLanguageBatchInput,\n    options?: GeneratedClientEntitiesRecognitionPiiOptionalParams\n  ): Promise<GeneratedClientEntitiesRecognitionPiiResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.sendOperationRequest(\n      { input, options: operationOptions },\n      entitiesRecognitionPiiOperationSpec\n    ) as Promise<GeneratedClientEntitiesRecognitionPiiResponse>;\n  }\n\n  /**\n   * The API returns a list of recognized entities with links to a well-known knowledge base. See the <a\n   * href=\"https://aka.ms/talangs\">Supported languages in Text Analytics API</a> for the list of enabled\n   * languages.\n   * @param input Collection of documents to analyze.\n   * @param options The options parameters.\n   */\n  entitiesLinking(\n    input: MultiLanguageBatchInput,\n    options?: GeneratedClientEntitiesLinkingOptionalParams\n  ): Promise<GeneratedClientEntitiesLinkingResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.sendOperationRequest(\n      { input, options: operationOptions },\n      entitiesLinkingOperationSpec\n    ) as Promise<GeneratedClientEntitiesLinkingResponse>;\n  }\n\n  /**\n   * The API returns a list of strings denoting the key phrases in the input text. See the <a\n   * href=\"https://aka.ms/talangs\">Supported languages in Text Analytics API</a> for the list of enabled\n   * languages.\n   * @param input Collection of documents to analyze.\n   * @param options The options parameters.\n   */\n  keyPhrases(\n    input: MultiLanguageBatchInput,\n    options?: GeneratedClientKeyPhrasesOptionalParams\n  ): Promise<GeneratedClientKeyPhrasesResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.sendOperationRequest(\n      { input, options: operationOptions },\n      keyPhrasesOperationSpec\n    ) as Promise<GeneratedClientKeyPhrasesResponse>;\n  }\n\n  /**\n   * The API returns the detected language and a numeric score between 0 and 1. Scores close to 1\n   * indicate 100% certainty that the identified language is true. See the <a\n   * href=\"https://aka.ms/talangs\">Supported languages in Text Analytics API</a> for the list of enabled\n   * languages.\n   * @param input Collection of documents to analyze for language endpoint.\n   * @param options The options parameters.\n   */\n  languages(\n    input: LanguageBatchInput,\n    options?: GeneratedClientLanguagesOptionalParams\n  ): Promise<GeneratedClientLanguagesResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.sendOperationRequest(\n      { input, options: operationOptions },\n      languagesOperationSpec\n    ) as Promise<GeneratedClientLanguagesResponse>;\n  }\n\n  /**\n   * The API returns a detailed sentiment analysis for the input text. The analysis is done in multiple\n   * levels of granularity, start from the a document level, down to sentence and key terms (aspects) and\n   * opinions.\n   * @param input Collection of documents to analyze.\n   * @param options The options parameters.\n   */\n  sentiment(\n    input: MultiLanguageBatchInput,\n    options?: GeneratedClientSentimentOptionalParams\n  ): Promise<GeneratedClientSentimentResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.sendOperationRequest(\n      { input, options: operationOptions },\n      sentimentOperationSpec\n    ) as Promise<GeneratedClientSentimentResponse>;\n  }\n}\n// Operation Specifications\n\nconst serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);\n\nconst analyzeOperationSpec: coreHttp.OperationSpec = {\n  path: \"/analyze\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {\n      headersMapper: Mappers.GeneratedClientAnalyzeHeaders\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    500: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  requestBody: Parameters.body,\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst analyzeStatusOperationSpec: coreHttp.OperationSpec = {\n  path: \"/analyze/jobs/{jobId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AnalyzeJobState\n    },\n    404: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    500: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [\n    Parameters.includeStatistics,\n    Parameters.top,\n    Parameters.skip\n  ],\n  urlParameters: [Parameters.endpoint, Parameters.jobId],\n  headerParameters: [Parameters.accept1],\n  serializer\n};\nconst healthStatusOperationSpec: coreHttp.OperationSpec = {\n  path: \"/entities/health/jobs/{jobId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HealthcareJobState\n    },\n    404: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    500: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [\n    Parameters.includeStatistics,\n    Parameters.top,\n    Parameters.skip\n  ],\n  urlParameters: [Parameters.endpoint, Parameters.jobId1],\n  headerParameters: [Parameters.accept1],\n  serializer\n};\nconst cancelHealthJobOperationSpec: coreHttp.OperationSpec = {\n  path: \"/entities/health/jobs/{jobId}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    202: {\n      headersMapper: Mappers.GeneratedClientCancelHealthJobHeaders\n    },\n    404: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    500: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.endpoint, Parameters.jobId1],\n  headerParameters: [Parameters.accept1],\n  serializer\n};\nconst healthOperationSpec: coreHttp.OperationSpec = {\n  path: \"/entities/health/jobs\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {\n      headersMapper: Mappers.GeneratedClientHealthHeaders\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    500: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  requestBody: Parameters.input,\n  queryParameters: [Parameters.modelVersion, Parameters.stringIndexType],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst entitiesRecognitionGeneralOperationSpec: coreHttp.OperationSpec = {\n  path: \"/entities/recognition/general\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EntitiesResult\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    500: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  requestBody: Parameters.input,\n  queryParameters: [\n    Parameters.includeStatistics,\n    Parameters.modelVersion,\n    Parameters.stringIndexType\n  ],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst entitiesRecognitionPiiOperationSpec: coreHttp.OperationSpec = {\n  path: \"/entities/recognition/pii\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PiiResult\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    500: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  requestBody: Parameters.input,\n  queryParameters: [\n    Parameters.includeStatistics,\n    Parameters.modelVersion,\n    Parameters.stringIndexType,\n    Parameters.domain\n  ],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst entitiesLinkingOperationSpec: coreHttp.OperationSpec = {\n  path: \"/entities/linking\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EntityLinkingResult\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    500: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  requestBody: Parameters.input,\n  queryParameters: [\n    Parameters.includeStatistics,\n    Parameters.modelVersion,\n    Parameters.stringIndexType\n  ],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst keyPhrasesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/keyPhrases\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyPhraseResult\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    500: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  requestBody: Parameters.input,\n  queryParameters: [Parameters.includeStatistics, Parameters.modelVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst languagesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/languages\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LanguageResult\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    500: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  requestBody: Parameters.input1,\n  queryParameters: [Parameters.includeStatistics, Parameters.modelVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst sentimentOperationSpec: coreHttp.OperationSpec = {\n  path: \"/sentiment\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SentimentResponse\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    500: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  requestBody: Parameters.input,\n  queryParameters: [\n    Parameters.includeStatistics,\n    Parameters.modelVersion,\n    Parameters.stringIndexType,\n    Parameters.opinionMining\n  ],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\n"]}