{"version":3,"file":"recognizeCategorizedEntitiesResult.js","sourceRoot":"","sources":["../../src/recognizeCategorizedEntitiesResult.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,OAAO,EACL,8BAA8B,EAG9B,4BAA4B,EAC7B,MAAM,uBAAuB,CAAC;AAqC/B,MAAM,UAAU,sCAAsC,CACpD,EAAU,EACV,QAA6B,EAC7B,QAAgC,EAChC,UAAmC;IAEnC,uCACK,8BAA8B,CAAC,EAAE,EAAE,QAAQ,EAAE,UAAU,CAAC,KAC3D,QAAQ,IACR;AACJ,CAAC;AAED,MAAM,UAAU,2CAA2C,CACzD,EAAU,EACV,KAAyB;IAEzB,OAAO,4BAA4B,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AACjD,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  makeTextAnalyticsSuccessResult,\n  TextAnalyticsSuccessResult,\n  TextAnalyticsErrorResult,\n  makeTextAnalyticsErrorResult\n} from \"./textAnalyticsResult\";\nimport {\n  Entity,\n  TextDocumentStatistics,\n  TextAnalyticsError,\n  TextAnalyticsWarning\n} from \"./generated/models\";\n\n/**\n * An entity from text analysis with information about its categorical\n * classification.\n */\nexport interface CategorizedEntity extends Entity {}\n\n/**\n * The result of the recognize entities operation on a single document.\n */\nexport type RecognizeCategorizedEntitiesResult =\n  | RecognizeCategorizedEntitiesSuccessResult\n  | RecognizeCategorizedEntitiesErrorResult;\n\n/**\n * The result of the recognize entities operation on a single document, containing the collection of\n * `Entity` objects identified in that document.\n */\nexport interface RecognizeCategorizedEntitiesSuccessResult extends TextAnalyticsSuccessResult {\n  /**\n   * The collection of entities identified in the input document.\n   */\n  readonly entities: CategorizedEntity[];\n}\n\n/**\n * An error result from the recognize entities operation on a single document.\n */\nexport type RecognizeCategorizedEntitiesErrorResult = TextAnalyticsErrorResult;\n\nexport function makeRecognizeCategorizedEntitiesResult(\n  id: string,\n  entities: CategorizedEntity[],\n  warnings: TextAnalyticsWarning[],\n  statistics?: TextDocumentStatistics\n): RecognizeCategorizedEntitiesSuccessResult {\n  return {\n    ...makeTextAnalyticsSuccessResult(id, warnings, statistics),\n    entities\n  };\n}\n\nexport function makeRecognizeCategorizedEntitiesErrorResult(\n  id: string,\n  error: TextAnalyticsError\n): RecognizeCategorizedEntitiesErrorResult {\n  return makeTextAnalyticsErrorResult(id, error);\n}\n"]}