{"version":3,"file":"healthResult.js","sourceRoot":"","sources":["../../src/healthResult.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport {\n  HealthcareEntity,\n  HealthcareRelation,\n  TextDocumentBatchStatistics\n} from \"./generated/models\";\nimport { TextAnalyticsErrorResult, TextAnalyticsSuccessResult } from \"./textAnalyticsResult\";\n\n/**\n * The results of a successful healthcare job for a single document.\n */\nexport interface HealthcareSuccessResult extends TextAnalyticsSuccessResult {\n  /**\n   * Healthcare entities.\n   */\n  entities: HealthcareEntity[];\n  /**\n   * Healthcare entity relations.\n   */\n  relations: HealthcareRelation[];\n}\n\n/**\n * An error result from the healthcare operation on a single document.\n */\nexport type HealthcareErrorResult = TextAnalyticsErrorResult;\n\n/**\n * The result of the healthcare operation on a single document.\n */\nexport type HealthcareResult = HealthcareSuccessResult | HealthcareErrorResult;\n\n/**\n * Array of {@link HealthcareResult}\n */\nexport interface HealthcareEntitiesArray extends Array<HealthcareResult> {}\n\n/**\n * The results of a healthcare job represented as a paginated iterator that can\n * either iterate over the results on a document-by-document basis or, by\n * byPage(), can iterate over pages of documents.\n */\nexport type PagedAsyncIterableHealthEntities = PagedAsyncIterableIterator<\n  HealthcareResult,\n  HealthcareEntitiesArray\n>;\n\n/**\n * The results of a healthcare job represented as a paginated iterator that can\n * either iterate over the results on a document-by-document basis or, by\n * byPage(), can iterate over pages of documents.\n */\nexport interface PaginatedHealthcareEntities extends PagedAsyncIterableHealthEntities {\n  /**\n   * Statistics about the input document batch and how it was processed\n   * by the service. This property will have a value when includeStatistics is set to true\n   * in the client call.\n   */\n  statistics?: TextDocumentBatchStatistics;\n  /**\n   * The version of the text analytics model used by this operation on this\n   * batch of input documents.\n   */\n  modelVersion: string;\n}\n"]}